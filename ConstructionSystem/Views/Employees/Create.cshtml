@model ConstructionSystem.Models.Entities.Employee

@{
    ViewBag.Title = "Create";
}
@section AdminNav{
    @{Html.RenderPartial("_AdminNav");}
}
@section styles{
    <link rel="stylesheet" type="text/css" href="~/library/font-awesome-4.7.0/css/font-awesome.min.css">
    <link href="~/library/material-design-iconic-font.min.css" rel="stylesheet" type="text/css" />
    <link href="~/library/bootstrap.min.css" rel="stylesheet" />
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <link href="~/library/nouislider.min.css" rel="stylesheet" />
    <!---------------------------------------------------------------------------------------------->
    <!--Main CSS-->
    <link href="~/css/css.css" rel="stylesheet" />
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-5 col-sm-4 right"></div>
        <div class="col-lg-7 col-sm-8 left">
            <div class="row">
                <div class="col"></div>
                <div class="col-lg-6 col-sm-8">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <span class="login-form-title">
                            Create Employee
                        </span>
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group inp-div validate-input sd">
                                <span class="label-input100">First Name</span>
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control input100p form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                <span class="focus-input100"></span>
                            </div>

                            <div class="form-group inp-div validate-input sd">
                                <span class="label-input100">Last Name</span>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control input100p form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                <span class="focus-input100"></span>
                            </div>
                            <div class="form-group inp-div validate-input sd">
                                <span class="label-input100">Address</span>
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control input100p form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                <span class="focus-input100"></span>
                            </div>

                            <div class="form-group inp-div validate-input sd">
                                <span class="label-input100">Phone</span>
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control input100p form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                <span class="focus-input100"></span>
                            </div>

                            <div class="form-group inp-div validate-input sd">
                                <span class="label-input100">Salary</span>
                                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control input100p form-control" } })
                                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                                <span class="focus-input100"></span>
                            </div>

                            <div class="form-group inp-div validate-input sd">
                                <span class="label-input100">Gender</span>
                                @Html.RadioButtonFor(model => model.Gender, true, new { @checked = "checked" }) &nbsp;&nbsp;<strong>Male</strong>
                                @Html.RadioButtonFor(model => model.Gender, false) &nbsp;&nbsp;<strong>Female</strong>
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                <span class="focus-input100"></span>
                            </div>

                            <div class="form-group inp-div validate-input sd">
                                <span class="label-input100">BirthDate</span>
                                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control input100p form-control" } })
                                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                <span class="focus-input100"></span>
                            </div>
                            <div class="form-group inp-div validate-input sd">
                                <span class="label-input100">HireDate</span>
                                @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control input100p form-control" } })
                                @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                                <span class="focus-input100"></span>
                            </div>

                            <div class="form-group inp-div validate-input sd">
                                <span class="label-input100">Email</span>
                                @Html.DisplayFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input100p form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                <span class="focus-input100"></span>
                            </div>
                            <div class="form-group inp-div validate-input sd">
                                <span class="label-input100">Superivisor</span>
                                @Html.DropDownList("SuperId", null, "--Select Supervisor--", htmlAttributes: new { @class = "form-control input100p" })
                                @Html.ValidationMessageFor(model => model.SuperId, "", new { @class = "text-danger" })
                                <span class="focus-input100"></span>
                            </div>
                            <div class="form-group inp-div validate-input sd">
                                <span class="label-input100">Department</span>
                                @Html.DropDownList("DepartmentID", null, "--Select Department--", htmlAttributes: new { @class = "form-control input100p" })
                                @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                                <span class="focus-input100"></span>
                            </div>

                            <div class="form-group container-login100-form-btn bt">
                                <div class=" wrap-login100-form-btn">
                                    <input type="submit" value="Create" class="login100-form-btn" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="col"></div>
            </div>
        </div>
    </div>
</div>

@*<div class="panel panel-primary">
        <div class="panel-heading  text-center">Create Employee</div>
        <div class="panel-body">


            @using (Html.BeginForm("Create","Employees",FormMethod.Post,new {@class = "" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.RadioButtonFor(model => model.Gender, true, new { @checked = "checked" }) &nbsp;&nbsp;<span>Male</span>
                                @Html.RadioButtonFor(model => model.Gender, false) &nbsp;&nbsp;<span>Female</span>
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">

                            @Html.DisplayFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SuperId, "Supervisor", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("SuperId", null, "--Select Supervisor--", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SuperId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DepartmentID, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("DepartmentID", null, "--Select Department--", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-success btn-block" />
                        </div>
                    </div>
                </div>
            }


            <div>
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
            </div>


        </div>
    </div>*@


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
