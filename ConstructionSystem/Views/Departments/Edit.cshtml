@model ConstructionSystem.Models.MyViewModels.DepartmentViewModel

@{
    ViewBag.Title = "Edit";
}


@section styles{
    <link href="~/Content/Css-department/fonts/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/Css-department/fonts/iconic/css/material-design-iconic-font.min.css" rel="stylesheet" />
    <link href="~/Content/Css-department/fonts/Linearicons-Free-v1.0.0/icon-font.min.css" rel="stylesheet" />
    <!---------------------------------------------------------------------------------------------->
    <link href="~/Content/Css-department/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/Css-department/css/Deprt-forms.css" rel="stylesheet" />
}

@section AdminNav{
    @{Html.RenderPartial("_AdminNav");}
}
<body>
    <main>
        <div class="container-fluid">
            <div class="row">

                <div class="col-lg-6 col-sm-6 col-xs-12 right"></div>

                <div class="col-lg-6 col-sm-6 col-xs-12 left">
                    <div class="row">
                        <div class="col"></div>
                        <div class="col-lg-10 col-sm-8">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                <span class="login-form-title">
                                    Edit Department
                                </span>

                                @Html.HiddenFor(x => x.DepartmentID);

                                <div class="inp-div validate-input" data-validate="Name is required">
                                    <span class="label-input100">Name</span>
                                    <br />
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "input100 form-control no-border " } })
                                    @Html.ValidationMessageFor(model => model.Name)
                                    @*<input class="input100 form-control no-border " type="text" name="name" placeholder="First Name...">*@
                                    <span class="focus-input100"></span>
                                </div>
                                <br />

                                @*<div class="inp-div validate-input" data-validate="Name is required">
                                    <span class="label-input100">Location</span>
                                    <br />
                                    @Html.DisplayFor(model => model.Location, new { htmlAttributes = new { @class = "input100 form-control no-border" } })
                                    @Html.ValidationMessageFor(model => model.Location)
                                    @*<input class="input100 form-control no-border " type="text" name="name" placeholder="Last Name...">*@
                                    @*<span class="focus-input100"></span>
                                </div>*@
                                <br />


                                <div class="inp-div validate-input stD" data-validate="Name is required">
                                    <span class="label-input100">StartDate</span>
                                    <br />
                                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "input100 form-control no-border", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.StartDate)
                                    @*<input class="input100 form-control no-border " type="email" name="name" placeholder="email.em@eg">*@
                                    <span class="focus-input100"></span>
                                </div>
                                <br />

                                @*<div class="inp-div validate-input" data-validate="Name is required">
                                    <span class="label-input100">Manager Name</span>
                                    <br />
                                    @Html.DisplayFor(x => x.FirstName, new { @class = "input100 form-control no-border" }) @Html.DisplayFor(x => x.LastName, new { @class = "input100 form-control no-border" })
                                    @*<input class="input100 form-control no-border " type="password" name="name" placeholder="Password...">*@
                                    @*<span class="focus-input100"></span>*@
                                @*</div>*@
                                <br />

                                <div class="form-group container-login100-form-btn wrap-login100-form-btn">
                                    <div class="login100-form-bgbtn"></div>
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-default login100-form-btn" />
                                    </div>
                                </div>


                            }
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </main>


</body>

